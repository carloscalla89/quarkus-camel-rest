quarkus.http.port=8081
quarkus.http.root-path=/api

quarkus.camel.openapi.expose.enabled=true
quarkus.camel.openapi.path=/api-docs

# Personalización del título y versión
quarkus.camel.openapi.title=Mi API con Camel y Quarkus
quarkus.camel.openapi.version=1.0.0

# Configurar URL del servidor en OpenAPI
quarkus.camel.openapi.server-url=https://miapi.com
quarkus.camel.openapi.server-description=Servidor de producción

# Configuracion del logging en consola
quarkus.log.level=INFO
quarkus.log.json.fields.mdc.flat-fields=true

# opentelemetry
quarkus.otel.metrics.enabled=true
quarkus.otel.traces.enabled=true
quarkus.otel.metrics.exporter=none
quarkus.otel.traces.exporter=none
#quarkus.otel.exporter.otlp.endpoint=http://otel-collector.otel-collector.svc.cluster.local:4317
quarkus.otel.exporter.otlp.endpoint=http://localhost:4317
# Fuerza gRPC para métricas/trazas
#quarkus.otel.exporter.otlp.metrics.protocol=grpc
#quarkus.otel.exporter.otlp.traces.protocol=grpc

# call external services
external.service.url=https://jsonplaceholder.typicode.com

### NATIVE IMAGE

# Construcción nativa dentro de contenedor
quarkus.native.container-build=true

# Runtime de contenedor (elige lo que tengas)
quarkus.native.container-runtime=docker

# Imagen builder Mandrel (elige versión y Java 17/21 acorde a tu proyecto)
quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21



# para habilitar el trace de errores
quarkus.native.debug.enabled=false
quarkus.native.enable-reports=false
quarkus.native.report-exception-stack-traces=false
quarkus.native.report-errors-at-runtime=false






